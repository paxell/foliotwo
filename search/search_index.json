{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Eleanor Paxman: Product Designer In my 14+ years of experience in a broad range of design roles and contexts, my career expertise could be summarised as this: evolving products. My expertise in product design for data-driven web applications draws from a wide range of experiences in the design of games, mobile apps, logos and branding. I work with product managers and business analysts, leading a design team to understand business and user needs and propose solutions for them: wireframe, prototype, test, iterate, repeat. I work with developers and quality assurance until the user need is satisfied within the current constraints. Although products can be released, I understand they are never 'done'. Everyone needs the products they use to evolve with them as technology marches forward and their expectations change. Areas of strength Product strategy: from desktop to mobile, native desktop to cloud application and print to screen I've spent a lot of time figuring out how to take a product from one stage of its life cycle to another. Managing constraints: considering legacy architecture, release schedules and budget constraints, there are always ways to improve a product from micro-interactions to macro re-platforming. Improving processes: applying the same agile principles of product development to the processes we rely on to keep things moving in the wider business, and afterwards reflecting: did that work? Connecting silos: highlighting common goals while appreciating the individual contributions of geographically distributed interdisciplinary team members (say that five times fast). Areas of interest Business needs: Squaring user needs with business needs is a fine balance. As designers we want our users to have everything, as a business we need to ask ourselves: what adds the most value? Designing automation: Products should make themselves (almost) redundant so that users spend less time working with the app and let the app work for them. I have only just begun to scratch the surface here. Leadership: I've implemented recruitment processes which improved hiring outcomes. I've coordinated a team of designers and supervised junior designers and I'm keen to learn more about how best to lead a design team. Active skills Generating user flows, wireframes and prototypes Creating mockups and design systems using Figma and Sketch Running user and stakeholder workshops using Miro and FigJam Styling with CSS and CSS preprocessors Coding using JavaScript and common libraries such as React Agile software methodology Version control using Git Adobe CC: Illustrator, Photoshop, InDesign Retired skills Why would I include these? In my career evolving products from one stage to another, I have used many tools, some of which I no longer use but have taught me a lot along the way. Hand coded HTML microsites and emails CMS building and theming using Drupal and Wordpress Interaction and animation using Flash and ActionScript Print and packaging design (not strictly retired, see love reef ) Work Evolution of roles: Retain Cloud (2019) Love reef, stop heat: t-shirt design (2021) Static to interactive: QAGOMA Map (2016) Contact me I am currently based in Brisbane, Australia and working remotely. To get in touch with me, please contact me via Linkedin .","title":"Home"},{"location":"#eleanor-paxman-product-designer","text":"In my 14+ years of experience in a broad range of design roles and contexts, my career expertise could be summarised as this: evolving products. My expertise in product design for data-driven web applications draws from a wide range of experiences in the design of games, mobile apps, logos and branding. I work with product managers and business analysts, leading a design team to understand business and user needs and propose solutions for them: wireframe, prototype, test, iterate, repeat. I work with developers and quality assurance until the user need is satisfied within the current constraints. Although products can be released, I understand they are never 'done'. Everyone needs the products they use to evolve with them as technology marches forward and their expectations change.","title":"Eleanor Paxman: Product Designer"},{"location":"#areas-of-strength","text":"Product strategy: from desktop to mobile, native desktop to cloud application and print to screen I've spent a lot of time figuring out how to take a product from one stage of its life cycle to another. Managing constraints: considering legacy architecture, release schedules and budget constraints, there are always ways to improve a product from micro-interactions to macro re-platforming. Improving processes: applying the same agile principles of product development to the processes we rely on to keep things moving in the wider business, and afterwards reflecting: did that work? Connecting silos: highlighting common goals while appreciating the individual contributions of geographically distributed interdisciplinary team members (say that five times fast).","title":"Areas of strength"},{"location":"#areas-of-interest","text":"Business needs: Squaring user needs with business needs is a fine balance. As designers we want our users to have everything, as a business we need to ask ourselves: what adds the most value? Designing automation: Products should make themselves (almost) redundant so that users spend less time working with the app and let the app work for them. I have only just begun to scratch the surface here. Leadership: I've implemented recruitment processes which improved hiring outcomes. I've coordinated a team of designers and supervised junior designers and I'm keen to learn more about how best to lead a design team.","title":"Areas of interest"},{"location":"#active-skills","text":"Generating user flows, wireframes and prototypes Creating mockups and design systems using Figma and Sketch Running user and stakeholder workshops using Miro and FigJam Styling with CSS and CSS preprocessors Coding using JavaScript and common libraries such as React Agile software methodology Version control using Git Adobe CC: Illustrator, Photoshop, InDesign","title":"Active skills"},{"location":"#retired-skills","text":"Why would I include these? In my career evolving products from one stage to another, I have used many tools, some of which I no longer use but have taught me a lot along the way. Hand coded HTML microsites and emails CMS building and theming using Drupal and Wordpress Interaction and animation using Flash and ActionScript Print and packaging design (not strictly retired, see love reef )","title":"Retired skills"},{"location":"#work","text":"","title":"Work"},{"location":"#contact-me","text":"I am currently based in Brisbane, Australia and working remotely. To get in touch with me, please contact me via Linkedin .","title":"Contact me"},{"location":"gallery/","text":"Gallery Various design work over my career, both commercial and personal. T shirt designs EVA 'Zeroes' album cover Thomas Banks' quest for love documentary Game design UI for Fundamentals games: series for an educational publisher Another world: point and click adventure game Branding Human touch massage therapy logo Jagged hairdressing logo","title":"Gallery"},{"location":"gallery/#gallery","text":"Various design work over my career, both commercial and personal.","title":"Gallery"},{"location":"gallery/#t-shirt-designs","text":"EVA 'Zeroes' album cover Thomas Banks' quest for love documentary","title":"T shirt designs"},{"location":"gallery/#game-design","text":"UI for Fundamentals games: series for an educational publisher Another world: point and click adventure game","title":"Game design"},{"location":"gallery/#branding","text":"Human touch massage therapy logo Jagged hairdressing logo","title":"Branding"},{"location":"work/evolution-of-roles/","text":"Evolution of roles: Retain Cloud enterprise A legacy product of 20+ years of age was replatformed and redesigned from on-premise to cloud SaaS. The initial 'MVP' was a mammoth project spanning almost two years and involving dozens of people: Back and front-end developers, quality assurance, DevOps, technical authors, UX designers and researchers. Then we moved to the next phase of development: implementing 'enterprise' features. I've decided to zoom in on one enterprise featureset I designed as part of a team. User needs The core functionality of the product is to assign resources (usually people) to jobs (also known as projects or matters) as bookings. The fundamental need for this featureset was to create a precursor to a booking. Where a booking could represent a 'final' commitment to work, there are various reasons why a booking could not yet be finalised, needing the precursor step: Several options or groups of options for bookings might need to be compared before finalising (known as scenarios) Depending on the governance of the organisation, the user might not have permission to create a booking but requests one for someone else to approve (known as booking requests) Groups of resources need to be found based on sets of criteria, where one user type creates requests, and another creates the resulting bookings (known as team requests or demand capture) In the legacy platform these 3 journeys were implemented as distinct features, sets of features, or separate areas of the application. It was clear to me that not all of these features could be developed in our time frame, and in any case, there was plenty of overlap between them. Constraints We determined that like every booking, every role should be associated with a job assigned and proposed that the new features for roles should live within the 'Jobs management' tab of the application, although this was later expanded so that roles could also appear in a graphical 'calendar view'. This featureset and others were developed as part of a funding round within our larger organisation, so we were constrained by a hard deadline at the end of which we had to demonstrate a range of features including this featureset. Process Consolidation Workflow mapping User testing Feature prioritisation Component mapping Design process improvements Start of development Quality assurance Release 1. Consolidation I proposed a way in which these needs could be combined into one new entity: a role, which could be grouped with other roles but each role would have its own status. I created an overview including flow charts to help determine whether all or most of the functionality of several legacy features could be simplified into one 'master' process using Miro. Overview in Miro The overview includes the following details: Actions that will be required at each step Suggested workflow options involving actors (user groups with different permissions) A proposed rough entity relationship diagram for the database architecture of roles ER diagram detail in Miro With the entity relationship diagram I showed how a role could be related to other entities in the application in order to meet all the needs satisfied by the legacy features: Job as a parent Group as a parent: through the group it could be related to other roles Resources: various linkages to do with user types and assignment Bookings: a role would be a predecessor of a booking 2. Workflow mapping In a follow up exercise I looked at the workflow in more detail, zooming in on actions that could be performed and corresponding screens in the application to steps in the workflow. Actions that could be performed would be determined by the user type or 'Actor': Requester: asks for a role to be made into a booking Planner: creates the booking Workflow mapping in Miro 3. User testing High fidelity screenshots which had previously been tested under the theme of 'scenarios' were adapted to the proposed workflow by the team. Prototype in Sketch Participants were screened and shown a different prototype workflow depending on whether they fit the 'Requester' or 'Planner' persona. The user testing lead us to streamline the navigation of the featureset by tweaking UI copy, moving buttons to more expected locations, and improving the visual hierarchy of items. 4. Feature prioritisation After consolidating the original features together, we needed to split them apart in an order and size that made sense for development and testing: Create and edit Contextual information Workflow Actors Contextual information: This is the data surrounding roles, some coming from calculated fields to determine e.g. the cost and revenue of roles. Another example of calculated data would be comparing roles with the assigned resource's existing bookings. Workflow: This is about the stages or statuses a role moves through from a draft to a completion, the creation of a live booking. Actors: This introduced the separation of permissions for creating and completing roles, with associated new role statuses like 'requested' and 'rejected'. 5. Component mapping To assist developers, the team mapped out all components that would need to be added to our existing component library by breaking down a new page design into its component elements and supplying styling details needed for implementation. We also provided descriptions for components which would eventually be incorporated into the live React Storybook component library. Our visual reference within the design team, a Sketch style library, was also updated. Component mapping in Miro 6. Design process improvements The final design artefacts we created for developers and QAs referred to were markdown files with a combination of description and images to describe new UI elements and interactions. Originally designers wrote text descriptions on each feature, but over time this became cumbersome for the teams, in particular QA who needed to be able to easily refer to the descriptions of already implemented features to check for regression. It was also difficult to keep track of feedback and follow up questions on designs. Incorporating feedback from the team, I migrated the design documents for this featureset to a new wiki of markdown files stored in git. The git process, in particular pull requests, allowed us to capture feedback from the team and go through a formalised approval process by development and QA before a design document was 'live'. Design documents, originally describing the entire featureset, became more standalone to streamline the development of each individual feature and migrated to a new process to make them easier to read and manage: a set of wiki pages stored in git. Design wiki page in Azure DevOps Release Previous releases had been heralded with very dry 'release notes' type emails to clients. I suggested that we develop an illustration style and library to produce simple illustrations to give users a graphical overview of new features. Release illustration for actors UI for editing a group of roles User testing doesn't stop at the release: further user testing will be conducted ahead of the design and development of complementary features to this featureset. Lessons learnt Error handling: During the quality assurance phase, many questions came up around the topic of error handling. Although we had a basic framework for handling errors, it was not granular enough to catch differences between issues with concurrent user editing and lack of security permissions, for instance. Additionally, the user friendliness of the saving mechanism for a group of roles, while some actions such as a status change can be completed independently, needs further work. Ease of navigation: The functionality for roles added two layers of navigation into the application. Although our URL handling meant that you could get directly to the role group with a link, other methods e.g. through context and drop-down menus were perhaps unnecessarily slow, requiring too many steps. Agile vs waterfall: Working to a deadline where we were committed to developing certain features meant that we were not very flexible when it came to incorporating the results of user testing or responding to any other client suggestions or frustrations along the way. It also meant that instead of our original goal of many small releases, we had several very large and complex releases. We resolved to work differently for future releases. Next steps The next release would work towards showing roles in the plans page, a graphical calendar view. Release illustration for roles in the plans page","title":"Evolution of roles"},{"location":"work/evolution-of-roles/#evolution-of-roles-retain-cloud-enterprise","text":"A legacy product of 20+ years of age was replatformed and redesigned from on-premise to cloud SaaS. The initial 'MVP' was a mammoth project spanning almost two years and involving dozens of people: Back and front-end developers, quality assurance, DevOps, technical authors, UX designers and researchers. Then we moved to the next phase of development: implementing 'enterprise' features. I've decided to zoom in on one enterprise featureset I designed as part of a team.","title":"Evolution of roles: Retain Cloud enterprise"},{"location":"work/evolution-of-roles/#user-needs","text":"The core functionality of the product is to assign resources (usually people) to jobs (also known as projects or matters) as bookings. The fundamental need for this featureset was to create a precursor to a booking. Where a booking could represent a 'final' commitment to work, there are various reasons why a booking could not yet be finalised, needing the precursor step: Several options or groups of options for bookings might need to be compared before finalising (known as scenarios) Depending on the governance of the organisation, the user might not have permission to create a booking but requests one for someone else to approve (known as booking requests) Groups of resources need to be found based on sets of criteria, where one user type creates requests, and another creates the resulting bookings (known as team requests or demand capture) In the legacy platform these 3 journeys were implemented as distinct features, sets of features, or separate areas of the application. It was clear to me that not all of these features could be developed in our time frame, and in any case, there was plenty of overlap between them.","title":"User needs"},{"location":"work/evolution-of-roles/#constraints","text":"We determined that like every booking, every role should be associated with a job assigned and proposed that the new features for roles should live within the 'Jobs management' tab of the application, although this was later expanded so that roles could also appear in a graphical 'calendar view'. This featureset and others were developed as part of a funding round within our larger organisation, so we were constrained by a hard deadline at the end of which we had to demonstrate a range of features including this featureset.","title":"Constraints"},{"location":"work/evolution-of-roles/#process","text":"Consolidation Workflow mapping User testing Feature prioritisation Component mapping Design process improvements Start of development Quality assurance Release","title":"Process"},{"location":"work/evolution-of-roles/#1-consolidation","text":"I proposed a way in which these needs could be combined into one new entity: a role, which could be grouped with other roles but each role would have its own status. I created an overview including flow charts to help determine whether all or most of the functionality of several legacy features could be simplified into one 'master' process using Miro. Overview in Miro The overview includes the following details: Actions that will be required at each step Suggested workflow options involving actors (user groups with different permissions) A proposed rough entity relationship diagram for the database architecture of roles ER diagram detail in Miro With the entity relationship diagram I showed how a role could be related to other entities in the application in order to meet all the needs satisfied by the legacy features: Job as a parent Group as a parent: through the group it could be related to other roles Resources: various linkages to do with user types and assignment Bookings: a role would be a predecessor of a booking","title":"1. Consolidation"},{"location":"work/evolution-of-roles/#2-workflow-mapping","text":"In a follow up exercise I looked at the workflow in more detail, zooming in on actions that could be performed and corresponding screens in the application to steps in the workflow. Actions that could be performed would be determined by the user type or 'Actor': Requester: asks for a role to be made into a booking Planner: creates the booking Workflow mapping in Miro","title":"2. Workflow mapping"},{"location":"work/evolution-of-roles/#3-user-testing","text":"High fidelity screenshots which had previously been tested under the theme of 'scenarios' were adapted to the proposed workflow by the team. Prototype in Sketch Participants were screened and shown a different prototype workflow depending on whether they fit the 'Requester' or 'Planner' persona. The user testing lead us to streamline the navigation of the featureset by tweaking UI copy, moving buttons to more expected locations, and improving the visual hierarchy of items.","title":"3. User testing"},{"location":"work/evolution-of-roles/#4-feature-prioritisation","text":"After consolidating the original features together, we needed to split them apart in an order and size that made sense for development and testing: Create and edit Contextual information Workflow Actors Contextual information: This is the data surrounding roles, some coming from calculated fields to determine e.g. the cost and revenue of roles. Another example of calculated data would be comparing roles with the assigned resource's existing bookings. Workflow: This is about the stages or statuses a role moves through from a draft to a completion, the creation of a live booking. Actors: This introduced the separation of permissions for creating and completing roles, with associated new role statuses like 'requested' and 'rejected'.","title":"4. Feature prioritisation"},{"location":"work/evolution-of-roles/#5-component-mapping","text":"To assist developers, the team mapped out all components that would need to be added to our existing component library by breaking down a new page design into its component elements and supplying styling details needed for implementation. We also provided descriptions for components which would eventually be incorporated into the live React Storybook component library. Our visual reference within the design team, a Sketch style library, was also updated. Component mapping in Miro","title":"5. Component mapping"},{"location":"work/evolution-of-roles/#6-design-process-improvements","text":"The final design artefacts we created for developers and QAs referred to were markdown files with a combination of description and images to describe new UI elements and interactions. Originally designers wrote text descriptions on each feature, but over time this became cumbersome for the teams, in particular QA who needed to be able to easily refer to the descriptions of already implemented features to check for regression. It was also difficult to keep track of feedback and follow up questions on designs. Incorporating feedback from the team, I migrated the design documents for this featureset to a new wiki of markdown files stored in git. The git process, in particular pull requests, allowed us to capture feedback from the team and go through a formalised approval process by development and QA before a design document was 'live'. Design documents, originally describing the entire featureset, became more standalone to streamline the development of each individual feature and migrated to a new process to make them easier to read and manage: a set of wiki pages stored in git. Design wiki page in Azure DevOps","title":"6. Design process improvements"},{"location":"work/evolution-of-roles/#release","text":"Previous releases had been heralded with very dry 'release notes' type emails to clients. I suggested that we develop an illustration style and library to produce simple illustrations to give users a graphical overview of new features. Release illustration for actors UI for editing a group of roles User testing doesn't stop at the release: further user testing will be conducted ahead of the design and development of complementary features to this featureset.","title":"Release"},{"location":"work/evolution-of-roles/#lessons-learnt","text":"Error handling: During the quality assurance phase, many questions came up around the topic of error handling. Although we had a basic framework for handling errors, it was not granular enough to catch differences between issues with concurrent user editing and lack of security permissions, for instance. Additionally, the user friendliness of the saving mechanism for a group of roles, while some actions such as a status change can be completed independently, needs further work. Ease of navigation: The functionality for roles added two layers of navigation into the application. Although our URL handling meant that you could get directly to the role group with a link, other methods e.g. through context and drop-down menus were perhaps unnecessarily slow, requiring too many steps. Agile vs waterfall: Working to a deadline where we were committed to developing certain features meant that we were not very flexible when it came to incorporating the results of user testing or responding to any other client suggestions or frustrations along the way. It also meant that instead of our original goal of many small releases, we had several very large and complex releases. We resolved to work differently for future releases.","title":"Lessons learnt"},{"location":"work/evolution-of-roles/#next-steps","text":"The next release would work towards showing roles in the plans page, a graphical calendar view. Release illustration for roles in the plans page","title":"Next steps"},{"location":"work/love-reef/","text":"Love reef, stop heat t-shirt design For my brother, a keen diver, on his birthday, I developed this t-shirt design. I was a bit rusty at print design so this was a nice refresher. 1. Sketch I had the idea of a graphical / simple representation of a coral reef. I wanted to have a small badge-like version for the front of the shirt and a larger version for the back. I played with a few variations of the text and placement. t shirt sketch: front t shirt sketch: back 2. Vector I vectorised the text and illustration. As with any hand lettering project, the lettering required a lot of manual tweaking. For this I used Affinity designer, which I'd never used before, because I didn't want to pay for a month of Adobe (and I'd recently used up a free 7 day trial doing some other personal work). For a simple print file, it did the trick, although it took me a while to figure out exporting it with a transparent background. vector front: smaller stroke weight vector front: larger stroke weight 3. Print I printed a white stroke version for a black t-shirt and a black stroke version for a white t-shirt. I like the white t-shirt better but I'm more of a black t-shirt wearer myself. white t shirt: front white t shirt: back black t shirt: front black t shirt: back","title":"Love reef"},{"location":"work/love-reef/#love-reef-stop-heat-t-shirt-design","text":"For my brother, a keen diver, on his birthday, I developed this t-shirt design. I was a bit rusty at print design so this was a nice refresher.","title":"Love reef, stop heat t-shirt design"},{"location":"work/love-reef/#1-sketch","text":"I had the idea of a graphical / simple representation of a coral reef. I wanted to have a small badge-like version for the front of the shirt and a larger version for the back. I played with a few variations of the text and placement. t shirt sketch: front t shirt sketch: back","title":"1. Sketch"},{"location":"work/love-reef/#2-vector","text":"I vectorised the text and illustration. As with any hand lettering project, the lettering required a lot of manual tweaking. For this I used Affinity designer, which I'd never used before, because I didn't want to pay for a month of Adobe (and I'd recently used up a free 7 day trial doing some other personal work). For a simple print file, it did the trick, although it took me a while to figure out exporting it with a transparent background. vector front: smaller stroke weight vector front: larger stroke weight","title":"2. Vector"},{"location":"work/love-reef/#3-print","text":"I printed a white stroke version for a black t-shirt and a black stroke version for a white t-shirt. I like the white t-shirt better but I'm more of a black t-shirt wearer myself. white t shirt: front white t shirt: back black t shirt: front black t shirt: back","title":"3. Print"},{"location":"work/static-to-interactive/","text":"Static to interactive: QAGOMA map 2016 Queensland Art Gallery / Gallery of Modern Art needed an interactive solution for wayfinding that showcased both of the gallery\u2019s buildings. Previously, static images of each floor were provided on the website and up-to-date maps including exhibition information could only be found in brochures. An interactive map would gather data from the website calendar to automatically provide up-do date information on exhibitions. Map in use on an iPad User needs The primary users would be current or future visitors to the gallery. The gallery is spread across two buildings, 5 minutes walk apart. Users commonly didn't know which of the two buildings was holding the exhibition they had come to see before arriving at the gallery. Other frequent users would be gallery services staff who could assist wayfinding in person by showing the maps to visitors on tablet devices. The map needed to show: Current exhibitions across both buildings on multiple floors Gallery services such as the research library and cafe Amenities and other features of the buildings such as lifts and bathrooms Constraints The solution needed to be compatible with the gallery website\u2019s layout and style guide All map assets needed to be stored in and retrieved from the gallery\u2019s squizMatrix CMS platform Information about exhibitions and events was stored in JSON Process Requirement gathering Technical investigation Mockups Stakeholder feedback Interactive mockups Further feedback and approval CMS integration Publishing to live site Requirement gathering I spoke with various stakeholders to get the initial requirements for the interactive map. Highlighting exhibitions: The map pins and exhibition listing should update automatically from the exhibition calendar Gallery services: Services such as the gallery\u2019s research library with links to their web pages should be accessible from the map Mobile friendly: The interface should adapt for use on mobile devices Accessible: needed to be high contrast and zoomable Initial sketch Technical investigation I selected Leaflet.js as a library for the map. I created custom map tiles from PDFs, mapping out the coordinates of each building feature and converting them to JSON to show each feature as a pin with an informational toolip. The website JSON was drawn in to populate the exhibition information and images into the tooltips. Interactive mockups I produced interactive mockups for final approval and testing. Many tweaks were made to optimise the user experience, especially on mobile. Interactive mockup Lessons learnt Performance: the interactive mockup was not a good indication of performance, retrieving assets through the CMS added to load time, especially the first load of the map. JSON configuration: this format worked really well with the existing site information and also to store the map data. It should be easy to modify if and when the layout of either gallery changes. Designing for re-use: The same map engine was subsequently used for an internal app for fire safety training. A more detailed version of the maps were used with pins to show the locations of all fire safety equipment and fire exits. The map is still in use on the QAGOMA website .","title":"Static to interactive"},{"location":"work/static-to-interactive/#static-to-interactive-qagoma-map-2016","text":"Queensland Art Gallery / Gallery of Modern Art needed an interactive solution for wayfinding that showcased both of the gallery\u2019s buildings. Previously, static images of each floor were provided on the website and up-to-date maps including exhibition information could only be found in brochures. An interactive map would gather data from the website calendar to automatically provide up-do date information on exhibitions. Map in use on an iPad","title":"Static to interactive: QAGOMA map 2016"},{"location":"work/static-to-interactive/#user-needs","text":"The primary users would be current or future visitors to the gallery. The gallery is spread across two buildings, 5 minutes walk apart. Users commonly didn't know which of the two buildings was holding the exhibition they had come to see before arriving at the gallery. Other frequent users would be gallery services staff who could assist wayfinding in person by showing the maps to visitors on tablet devices. The map needed to show: Current exhibitions across both buildings on multiple floors Gallery services such as the research library and cafe Amenities and other features of the buildings such as lifts and bathrooms","title":"User needs"},{"location":"work/static-to-interactive/#constraints","text":"The solution needed to be compatible with the gallery website\u2019s layout and style guide All map assets needed to be stored in and retrieved from the gallery\u2019s squizMatrix CMS platform Information about exhibitions and events was stored in JSON","title":"Constraints"},{"location":"work/static-to-interactive/#process","text":"Requirement gathering Technical investigation Mockups Stakeholder feedback Interactive mockups Further feedback and approval CMS integration Publishing to live site","title":"Process"},{"location":"work/static-to-interactive/#requirement-gathering","text":"I spoke with various stakeholders to get the initial requirements for the interactive map. Highlighting exhibitions: The map pins and exhibition listing should update automatically from the exhibition calendar Gallery services: Services such as the gallery\u2019s research library with links to their web pages should be accessible from the map Mobile friendly: The interface should adapt for use on mobile devices Accessible: needed to be high contrast and zoomable Initial sketch","title":"Requirement gathering"},{"location":"work/static-to-interactive/#technical-investigation","text":"I selected Leaflet.js as a library for the map. I created custom map tiles from PDFs, mapping out the coordinates of each building feature and converting them to JSON to show each feature as a pin with an informational toolip. The website JSON was drawn in to populate the exhibition information and images into the tooltips.","title":"Technical investigation"},{"location":"work/static-to-interactive/#interactive-mockups","text":"I produced interactive mockups for final approval and testing. Many tweaks were made to optimise the user experience, especially on mobile. Interactive mockup","title":"Interactive mockups"},{"location":"work/static-to-interactive/#lessons-learnt","text":"Performance: the interactive mockup was not a good indication of performance, retrieving assets through the CMS added to load time, especially the first load of the map. JSON configuration: this format worked really well with the existing site information and also to store the map data. It should be easy to modify if and when the layout of either gallery changes. Designing for re-use: The same map engine was subsequently used for an internal app for fire safety training. A more detailed version of the maps were used with pins to show the locations of all fire safety equipment and fire exits. The map is still in use on the QAGOMA website .","title":"Lessons learnt"}]}